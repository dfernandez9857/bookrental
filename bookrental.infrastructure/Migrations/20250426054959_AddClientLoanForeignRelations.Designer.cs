// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bookrental.infrastructure.Data;

#nullable disable

namespace bookrental.infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250426054959_AddClientLoanForeignRelations")]
    partial class AddClientLoanForeignRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bookrental.core.Entities.BookCopy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsLoanable")
                        .HasColumnType("bit")
                        .HasColumnName("habilitado_prestamo");

                    b.Property<int>("LoanStatusId")
                        .HasColumnType("int")
                        .HasColumnName("estado_ejemplar_id");

                    b.HasKey("Id");

                    b.ToTable("ejemplar", (string)null);
                });

            modelBuilder.Entity("bookrental.core.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombres");

                    b.Property<string>("IdentityDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("documento_identidad");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("apellidos");

                    b.HasKey("Id");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("bookrental.core.Entities.ClientBlackList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("motivo");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("lista_negra_cliente", (string)null);
                });

            modelBuilder.Entity("bookrental.core.Entities.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_devolver");

                    b.Property<string>("LoanChannel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("canal_prestamo");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_prestamo");

                    b.Property<int>("LoanStatusId")
                        .HasColumnType("int")
                        .HasColumnName("estado_prestamo_id");

                    b.Property<int>("RegisteredByUserId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_registra_prestamo");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_devolucion");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("prestamo", (string)null);
                });

            modelBuilder.Entity("bookrental.core.Entities.LoanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookCopyId")
                        .HasColumnType("int")
                        .HasColumnName("ejemplar_id");

                    b.Property<int>("LoanId")
                        .HasColumnType("int")
                        .HasColumnName("prestamo_id");

                    b.HasKey("Id");

                    b.HasIndex("BookCopyId");

                    b.HasIndex("LoanId");

                    b.ToTable("detalle_prestamo", (string)null);
                });

            modelBuilder.Entity("bookrental.core.Entities.ClientBlackList", b =>
                {
                    b.HasOne("bookrental.core.Entities.Client", "Client")
                        .WithMany("ClientBlackLists")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("bookrental.core.Entities.Loan", b =>
                {
                    b.HasOne("bookrental.core.Entities.Client", "Client")
                        .WithMany("Loans")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("bookrental.core.Entities.LoanDetail", b =>
                {
                    b.HasOne("bookrental.core.Entities.BookCopy", "BookCopy")
                        .WithMany()
                        .HasForeignKey("BookCopyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("bookrental.core.Entities.Loan", "Loan")
                        .WithMany("LoanDetails")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookCopy");

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("bookrental.core.Entities.Client", b =>
                {
                    b.Navigation("ClientBlackLists");

                    b.Navigation("Loans");
                });

            modelBuilder.Entity("bookrental.core.Entities.Loan", b =>
                {
                    b.Navigation("LoanDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
